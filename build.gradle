plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.20'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.20'
    id 'org.jlleitschuh.gradle.ktlint' version '11.3.2'
}

group = 'musinsa.homework'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    runtimeOnly "com.h2database:h2"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    testImplementation "io.mockk:mockk:1.13.4"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "io.kotest:kotest-assertions-core-jvm:5.0.0"
    testImplementation "com.appmattus.fixture:fixture:1.2.0"
}

tasks.named('test') {
    useJUnitPlatform()
}

// build.gradle (Groovy DSL) 최하단에 추가
sourceSets {
    integrationTest {
        java.srcDir file('src/integrationTest/kotlin')
        resources.srcDir file('src/integrationTest/resources')
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
    useJUnitPlatform()
}

check.dependsOn integrationTest
